J=JSON.stringify,P=JSON.parse,R=((e,t,r=200)=>{e.writeHead(r,{"Content-Type":"application/json"}),e.end(Buffer.from(J(t)))}),r=require,f=r("fs").readFileSync,l=function(e,t,s){f(e,"utf-8").split(":").map(function(e){let o=e.split(";");if(!s)return this[o[0]]=t?r(o[1]):o[1];this[o[0]]=(e=>{R(e,{Message:o[1]},o[2])})})},l("d",1),l("s"),l("e",1,1),createApiPath=(e=>`/?apiKey=${apiKey}&t=${e}`),generateId=(e=>crypto.randomBytes(16).toString("hex")),Filter=((e,t,r)=>Object.keys(e).reduce((s,o)=>e[o][t]===r?{...s,[o]:e[o]}:{...s},{})),Filtering=((e,t)=>(Object.entries(t).map(([t,r])=>e=Filter(e,t,r)),e)),request=((e,t,r)=>new Promise((s,o)=>{const n=https.request({method:r?"PUT":"GET",hostname:e,path:t},e=>{let t="";e.on("data",e=>t+=e),e.on("end",e=>s(P(t))),e.on("error",e=>o(e))});r&&n.write(J(r)),n.end()})),postMovies=(async(e,t)=>{const{Title:r}=e.body;if(!r)return VE(t);const s=generateId(),o={...await request(apiUrl,createApiPath(querystring.escape(r))),Id:s};if(!o||o.Error)return EU(t);R(t,await request(dbHost,`/movies/${s}.json`,o),201)}),postComments=(async(e,t)=>{const{MovieId:r,Text:s}=e.body,o=generateId();return r&&s?await request(dbHost,`/movies/${r}.json`)?void R(t,await request(dbHost,`/comments/${o}.json`,{...e.body,Id:o}),201):EU(t):VE(t)}),get=(async(e,t)=>{col=await request(dbHost,`/${e.url.startsWith("/movies")?"movies":"comments"}.json`)||{},R(t,Filtering(col,e.query))}),parseBody=(e=>new Promise((t,r)=>{let s="";e.on("data",e=>s+=e.toString()),e.on("end",r=>{e.body=P(s),t()}),e.on("error",e=>r(e))})),http.createServer(async(e,t)=>{process.on("unhandledRejection",e=>UE());var r=e.method,s=url.parse(e.url,!0),o={GET:{movies:get,comments:get},POST:{movies:postMovies,comments:postComments}}[r][s.pathname.replace("/","")];if(e.query=s.query||{},"POST"===r&&await parseBody(e,t),!o)return NF(t);o(e,t)}).listen(8080);